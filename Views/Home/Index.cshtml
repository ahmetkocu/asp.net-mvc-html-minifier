@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Index</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Visual Studio 2012 Intellisense Not Working &#8211; SOLVED | Haney Codes .NET</title>
    <link rel="profile" href="http://gmpg.org/xfn/11" />
    <link rel="pingback" href="http://www.haneycodes.net/xmlrpc.php" />
    <!--[if lt IE 9]>
    <script src="http://www.haneycodes.net/wp-content/themes/twentytwelve/js/html5.js" type="text/javascript"></script>
    <![endif]-->
    <link rel="alternate" type="application/rss+xml" title="Haney Codes .NET &raquo; Feed" href="http://www.haneycodes.net/feed/" />
    <link rel="alternate" type="application/rss+xml" title="Haney Codes .NET &raquo; Comments Feed" href="http://www.haneycodes.net/comments/feed/" />
    <link rel="alternate" type="application/rss+xml" title="Haney Codes .NET &raquo; Visual Studio 2012 Intellisense Not Working &#8211; SOLVED Comments Feed" href="http://www.haneycodes.net/visual-studio-2012-intellisense-not-working-solved/feed/" />
    <link rel='stylesheet' id='twentytwelve-fonts-css' href='http://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,400,700&#038;subset=latin,latin-ext' type='text/css' media='all' />
    <link rel='stylesheet' id='twentytwelve-style-css' href='http://www.haneycodes.net/wp-content/themes/deux-milles-douze/style.css?ver=3.9.2' type='text/css' media='all' />
    <!--[if lt IE 9]>
    <link rel='stylesheet' id='twentytwelve-ie-css'  href='http://www.haneycodes.net/wp-content/themes/twentytwelve/css/ie.css?ver=20121010' type='text/css' media='all' />
    <![endif]-->

</head>
<body>
    <div>
        The program defines the UppercaseWords static method, which is equivalent to the ucwords function in scripting languages. Internally, the method body of the UppercaseWords method first tests the first character of the string.

        It special-cases the first character because the loop in the next part does not correctly allow for the first character. The if-statement is validated in the test cases when the first two strings have their first letters uppercased.

        If
        Next:
        UppercaseWords does a for-loop through all the characters in the string starting at the second character with index of one.

        For
        And:
        In each iteration it tests the previous character for a space. If it detects a space, it modifies the character array buffer.

        Split strings
        Efficiency notes. The UppercaseWords method could be implemented by first splitting on the sub-words in the string based on a regular expression or the Split method. But this would result in many more allocations.

        Split
        However:
        You could use the Regex.Split method for a better algorithm of breaking up the words.

        Regex.Split
        Note:
        The method does not contain sophisticated error correction. It may incorrectly handle some words.
    </div>
</body>
</html>
